version: "3.9"

services:
  node:
    build:
      context: ../../
      dockerfile: config/docker/Dockerfile
    env_file:
      - ../../.env
    restart: unless-stopped
    volumes:
      - NodeSocket:/var/run/node

  php:
    build:
      context: ../../
      dockerfile: config/docker/Dockerfile
    depends_on:
      - node
    env_file:
      - ../../.env
    restart: unless-stopped
    volumes:
      - PhpSocket:/var/run/php
      - NodeSocket:/var/run/node
    environment:
      - APP_SECRET_FILE: /run/secrets/app_secret
      - POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    secrets:
      - app_secret
      - postgres_password

  caddy:
    build:
      context: ../../
      dockerfile: config/docker/Dockerfile
      target: caddy
    depends_on:
      - php
    env_file:
      - ../../.env
    restart: unless-stopped
    volumes:
      - PhpSocket:/var/run/php
      - CaddyData:/data
      - CaddyConfig:/config
      - ./var/log/caddy:/srv/app/var/log/caddy
    ports:
      - target: 80
        published: 80
        protocol: tcp
      - target: 443
        published: 443
        protocol: tcp
      - target: 443
        published: 443
        protocol: udp

  postgres:
    image: postgres:15-alpine
    env_file:
      - ../../.env
    restart: unless-stopped
    volumes:
      - PostgresData:/var/lib/postgresql/data:rw

secrets:
  postgres_password:
    file: postgres_password.txt
  app_secret:
    file: app_secret.txt

volumes:
  PhpSocket:
  NodeSocket:
  PostgresData:
  CaddyData:
  CaddyConfig:
